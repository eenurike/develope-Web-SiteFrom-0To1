Стилизация checkbox, действуем по принципу спрячь и покажи чтото другое, так как чекбоксы не стилизуются, структура должна быть такая. И обязательно чтоб этот span который встает вместо input checkbox, должен находится ниже input checkbox, так как код идет сверху вниз, мы не можем задать верхнему коду свойства!!!

<label class="box">
  <input class="input" type="checkbox">
  <span class="checkbox"></span>
</label>

<label class="box">
  <input class="input" type="checkbox" checked>
  /* Это чтоб всегда одна категория была выбрана */
  <span class="checkbox"></span>
</label>

.input {
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  position: absolute;
}

/* 
ИЛИ стилизуешь прям в самом теге span, например вставляешь картинки svg которые меняют цвет при клике 
<label class="box">
  <input class="input" type="checkbox" checked>
  /* Это чтоб всегда одна категория была выбрана */
  <span class="checkbox">
    <svg>Bla</svg>
  </span>
</label>
*/


.input:checked + .checkbox {
  background-image: url('../images/icons/on-check.svg');
  /* Тут мы пишем чтоб свойство checked передалось в наш span, и стилизуем его как хотим, в моем случае я скачал галочку и при клике на span будет показываться галочка */
}

И потом просто стилизуем span на месте checkbox

.checkbox {
  width: 16px;
  height: 16px;
  display: block;
  /* Чтоб этот span появился, можно было position absolute, но мне так не нравится позиционировать элемент */
  margin-top: 2px;
}

если рядом тескт который должен менять цвет приклике на чекбоксы

&:checked + .filter-size__checkbox {
  border: 1px solid $accent;
  background-image: url('../images/icons/shop-page/checkmark.svg');
  background-position: center center;

  + .filter-size__text {
  color: $accent;
Смотри чтоб при клике поменять цвет текста, можно воспользоваться Js, но можно
и Css, но в Css не селектора который мог бы обращать к родителю, так что 
этот текст обернули в span class="filter-size__text", и
&:checked + .filter-size__checkbox этому элементу дописали + .filter-size__text,
что обозначает следущим элемент от .filter-size__checkbox и ему меняем цвет
  }
}

С радиобатанами немногу схема по другому, там же нужно выбрать только одну категорию

<label class="box">
  <input class="input" type="radio" name="bla">
  <span class="radio"></span>
</label>

<label class="box">
  <input class="input" type="radio" name="bla">
  <span class="radio"></span>
</label>

То есть нужно указывать атрибут name

И смотри когда верстаешь блоки с филтрацией, когда выбираешь пункты, потом жмешь поиск, и сайт ищет по твоим категориям, то все элементы форм нужно писать в теге form,
а выбор в каких либо категорях пишешь в label, label как бы обьединяет что в нем написанно, ну и при помощи манипуляции которая описанна сверху, можешь стилизовать выборку.
И radiobutton стилизуются точно так же!!!

Если нужно при hover или click поставить элемент по цетру по вертикале и он position absolute относительно родительского элемента 

bla:hover {
  bottom: 50%;
  transform: translateY(50%)'
}

Если нужен слайдер который будет показывать одну большую фотографию а с боку маленькие, и при клике на маленькие фотографии в большом окне будет отображаться та кликнутая фотография, используя слик слайдер

$('.product-inner__main').slick({
    asNavFor: '.product-inner__aside',
    /* Соединяем слайдеры */
    focusOnSelect: true,
    slidesToShow: 4,
    slidesToScroll: 1,
    vertical: true,
    /* Ну чтоб слйдер был вертикальным, а не горизонтальным */
    draggable: false
    /* Чтоб вообще он не двигался */

  });
  $('.product-inner__aside').slick({
    asNavFor: '.product-inner__main',
    /* Соединяем слайдеры */
    draggable: false
  });

  структура HTML 

<div class="product-inner__aside">
  <div class="product-inner__aside-item">
    <img class="product-inner__aside-img" src="images/product/product-details/1.jpg" alt="">
  </div>
  <div class="product-inner__aside-item">
    <img class="product-inner__aside-img" src="images/product/product-details/1.jpg" alt="">
  </div>
  <div class="product-inner__aside-item">
    <img class="product-inner__aside-img" src="images/product/product-details/1.jpg" alt="">
  </div>
  <div class="product-inner__aside-item">
    <img class="product-inner__aside-img" src="images/product/product-details/1.jpg" alt="">
  </div>
</div>

<div class="product-inner__main">
  <div class="product-inner__main-item">
    <img class="product-inner__main-img" src="images/product/product-details/1.jpg" alt="">
  </div>
  <div class="product-inner__main-item">
    <img class="product-inner__main-img" src="images/product/product-details/1.jpg" alt="">
  </div>
  <div class="product-inner__main-item">
    <img class="product-inner__main-img" src="images/product/product-details/1.jpg" alt="">
  </div>
  <div class="product-inner__main-item">
    <img class="product-inner__main-img" src="images/product/product-details/1.jpg" alt="">
  </div>
</div>

То есть структура второго слайдера должна быть такой же как и в первом

css полезное свойство
pointer-events: auto | none
auto Восстанавливает функциональность элемента по умолчанию.
none Предотвращает события мыши и щелчки по элементу.

background-position: bottom -150px left 0;
типа низу -150px слева 0 задаешь, так легче позиционировать элемента

И отступы лучше используй VW так как при адаптивке это очень удобно, https://only-to-top.ru/services/px-to-vw.html это калькулятор перевода px в vw

Если блок больще чем картинка, можешь img задать width: 100%, чтоб картинка разширилась на всю ширину блока 


<------------------- ОТСЮДА ЕПТА ------------------->
  grid-template-rows: 200px 300px minmax(80px, auto);
То есть если было бы возможно то оно было бы 80px, а если нет то сколько есть контента, такая высота и будет
Запомни что auto, тогда элемент будет занимать сколько ему отведенно место, типа по контенту

.item:nth-child(1) {
  grid-column: 2;
То есть первый элемент встал во второй столбец, а второй элемент переместился на третий, а в первом столбце пусто
}

.item:nth-child(2) {
  grid-column: 1;
Но теперь второй эллемент который в третьем столбце, переместился на вторую строку в первый столбец,
а первый и третий столбец на первой строке пустуют, чтоб второй элемент поставить в первую строку на первый столбец то есть в начало
  grid-row: 1;
}

.text {
  grid-column: 3;
  grid-row: 4;
Блок с текстом переместили вконец, то есть на 4 строку и в третий столбец
}

.item:nth-child(4) {
  grid-column: 1 / 3;
Четвертый элемент будет занимать две колонки, он считает по линиям, типа с первой линии по третью линию
  grid-row: 2 / 4;
И теперь элемент занимает 2 строки, и положение от второй линии по четверту. Это нужно для того чтоб вообще кординально менять местоположение + увеличивая его или уменьшая

  grid-column: span 2;
Span это не то что ты подумал! это обозночает что этот элемент увеличится на две ячейки то есть будет 
занимать два столбца, от того места где он стоит
  grid-row: span 2;
}

.header,
.footer {
  padding: 40px 0;
Отступы между основными блоками лучше задавать главным родителям,
чтоб при адаптиве при определенном breakpoint через запятую указывать 
родителей и им задавать отпределенные отступы

flex-grow: 1;
  flex-shrink: 1;
Например элемент фиксированный,и нужно чтоб он одновременно сужался и был занимал все пустое пространство, прописываем эти 2 свойства

&__inner {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
    //grid-template-rows: repeat(2, 1fr);
Можно и без grid template rows так как у нас 6 карточек, а мы в строках прописали 
всего по 3 колонки
  column-gap: 30px;
  row-gap: 48px;
  gap: 45px 30px;
В сокращенном варианте можно прописать вот так, первое значение это row, а второе column
}

&:hover {
  box-shadow: 0px 0px 60px 20px rgba(202, 202, 202, 0.35);
  background-color: #fff;
  .blog__content-link,
  svg path {
    color: $accent;
    fill: $accent;
  }
То есть если у элемента много ховерных эфектов можно сразу перечислисть всем
}

&:checked + .filter-color__checkbox {
  background-image: url('../images/icons/shop-page/on-check.svg');
Тут мы пишем чтоб свойство checked передалось в наш span, и стилизуем его как хотим, в моем случае я скачал галочку и при клике на span будет показываться галочка. И засчет того что эти
элементы обьядененны в тег label, теперь даже если кликнуть на текс blue, галочка тоже 
применится

  & + .filter-color__text {
    color: $accent;
  }

}

ТАБЫ

&__content-item {
  display: none;
Короче схема такая, если у таба и item есть класс active то он его показывает
а другие скрывает
  &--active{
    display: block;
  }
}

$('.product-tabs__tab').click('on', function(e) {
  e.preventDefault();
Чтоб убрать стандартное поведение элементов, например ссылки
  $('.product-tabs__tab').removeClass('product-tabs__tab--active');
  $(this).addClass('product-tabs__tab--active');
this это именно кликнутый элемент
  $('.product-tabs__content-item').removeClass('product-tabs__content-item--active');
  $($(this).attr('href')).addClass('product-tabs__content-item--active');
Типа именно обращаемся к атрибуту (id) у контента, так как у нас в HTML по id связаны
блоки табов и контента
});

Взависимости от того с какой стороны будет картинка слева или справа.
И насчет float, флоат именно предназначен чтоб текст обтикал картинку!! 
.blog-one__img-right {
  float: right;
  margin-left: 29px;
}